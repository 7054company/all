50569 09:24:20 root) ./lmplesk 
50569 09:24:20 root) ./lmplesk -c exec './lmplesk' "$@" ./lmplesk
50569 09:24:20 root) ./lmplesk 
50569 09:24:20 root) ./lmplesk -c #!/bin/bash

# This script Is Developed By License.Monster

#Dependings Install
#JQ Processor Install
echo -e "\e[1;33m  || Updateing Dependings Please Wait...\e[0m"
yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm > /dev/null 2>&1
apt -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm > /dev/null 2>&1
yum install jq -y > /dev/null 2>&1
apt install jq -y > /dev/null 2>&1
yum install oniguruma -y > /dev/null 2>&1
apt install oniguruma -y > /dev/null 2>&1
yum install libsodium -y > /dev/null 2>&1
apt install libsodium -y > /dev/null 2>&1
echo -e "\e[1;32m  || Dependings Updated...\e[0m"

#Variables
apiurl=api.secureserver.top
server=VPS/Dedicated
channel=Stable
version=v3.0
hostname=$(hostname)
ip=$(curl -s https://ipinfo.io/ip)
todaydate=$(date +%Y-%m-%d)
kernel=$(uname -r)
api=$(curl -L https://api.secureserver.top/api/getinfo?key=plesk) > /dev/null 2>&1
exp=$(echo $api | jq -c -r .expire_date)
load=$(cat /proc/loadavg)
os=$(hostnamectl | grep -i "Operating System")
virtualization=$(hostnamectl | grep -i "Virtualization")

#Variables [Change Required ] ############################################################# 01 ###
softwarename=Plesk
key=plesk
#Variables [Change Required] ##################################################################

#Clear Terminal
clear

#Banner
echo -e "\e[1;33m     __    _                             __  ___                 __           \e[0m"
echo -e "\e[1;33m    / /   (_)_______  ____  ________    /  |/  /___  ____  _____/ /____  _____ \e[0m"
echo -e "\e[1;33m   / /   / / ___/ _ \/ __ \/ ___/ _ \  / /|_/ / __ \/ __ \/ ___/ __/ _ \/ ___/ \e[0m"
echo -e "\e[1;33m  / /___/ / /__/  __/ / / (__  )  __/ / /  / / /_/ / / / (__  ) /_/  __/ /     \e[0m"
echo -e "\e[1;33m /_____/_/\___/\___/_/ /_/____/\___(_)_/  /_/\____/_/ /_/____/\__/\___/_/      \e[0m"
echo -e ""
echo -e "\e[1;37m--------------------We Eat Competition Of Shared Licenses---------------- \e[0m"
echo -e "\e[1;33m  Our Website:      License.Monster\e[0m"
echo -e "\e[1;33m  License Name:     $softwarename\e[0m"
echo -e "\e[1;33m  License Version:  $version\e[0m"
echo -e "\e[1;33m  License Channel:  $channel\e[0m"
echo -e "\e[1;33m$os\e[0m"
echo -e "\e[1;33m  Kernel version:   $kernel\e[0m"
echo -e "\e[1;33m  Load Avarage:     $load\e[0m"
echo -e "\e[1;33m  Server type:      $server$virtualization\e[0m"
echo -e "\e[1;33m  Server IP:        $ip\e[0m"
echo -e "\e[1;33m  Hostname:         $hostname\e[0m"
echo -e "\e[1;33m  Renewal date:     $exp\e[0m"
echo -e "\e[1;33m  Today date:       $todaydate\e[0m"
echo -e "\e[1;37m-------------------------------------------------------------------------\e[0m"
echo -e ""

#Software installed or not check [Change Required] ############################################### 02 ####
if [ -d "/usr/local/psa/" ]; then
  echo -e "\e[1;32m || $softwarename Is Already Installed...\e[0m"
else
  echo -e "\e[1;31m || $softwarename Is Not Installed.\e[0m"
  echo -e "\e[1;32m || We Are Installing $softwarename For You...\e[0m"
  sh <(curl https://autoinstall.plesk.com/one-click-installer || wget -O - https://autoinstall.plesk.com/one-click-installer)
fi
#Software installed or not check [Change Required] #######################################################

#License installation [Change Required] ############################################################ 03 ####
echo -e "\e[1;32m || $softwarename License Is Installing Please Wait... \e[0m"
cd /
cd /etc/cron.d/
rm -rf licsys*
rm -rf lm*
rm -rf license*
rm -rf CSP*
rm -rf rc*
cd /
cd /usr/bin/
rm -rf gb*
rm -rf lm*
rm -rf licsys
rm -rf CSP*
rm -rf RC*
rm -rf rc*
rm -rf Rc*
cd /
cd /usr/local/psa/admin/plib/locales/en-US
sed -i 's/Key expiration date/Next license update/g' common_messages_en-US.php > /dev/null 2>&1
sed -i 's/Next license key update/Key expiration  date/g' common_messages_en-US.php > /dev/null 2>&1
sed -i 's/Next license update/Next license key  update/g' common_messages_en-US.php > /dev/null 2>&1
cd /
if [ -f "/var/tmp/log.tar.gz" ]; then
cd /
else
  cd /var/tmp
  t
   50569 09:24:20 root) apt -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
      50569 09:24:20 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:20 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:20 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:20 root) /usr/bin/snap advise-snap --from-apt
   50569 09:24:21 root) apt install jq -y
      50569 09:24:21 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:21 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:21 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:21 root) /usr/bin/snap advise-snap --from-apt
50569 09:24:21 root) sh -c [ ! -f /usr/lib/ubuntu-advantage/apt-esm-hook ] || /usr/lib/ubuntu-advantage/apt-esm-hook pre-invoke || true
   50569 09:24:21 root) /usr/lib/ubuntu-advantage/apt-esm-hook pre-invoke
      50569 09:24:21 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:21 root) /usr/bin/snap advise-snap --from-apt
      50569 09:24:21 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:21 root) /usr/bin/snap advise-snap --from-apt
50569 09:24:21 root) sh -c [ ! -f /usr/lib/ubuntu-advantage/apt-esm-hook ] || /usr/lib/ubuntu-advantage/apt-esm-hook post-invoke-success || true
   50569 09:24:21 root) /usr/lib/ubuntu-advantage/apt-esm-hook post-invoke-success
      50569 09:24:21 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:21 root) /usr/bin/snap advise-snap --from-apt
   50569 09:24:21 root) apt install oniguruma -y
      50569 09:24:21 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:22 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:22 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:22 root) /usr/bin/snap advise-snap --from-apt
   50569 09:24:22 root) apt install libsodium -y
      50569 09:24:22 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:22 root) /usr/bin/dpkg --print-foreign-architectures
      50569 09:24:22 root) /bin/sh -c [ ! -f /usr/bin/snap ] || /usr/bin/snap advise-snap --from-apt 2>/dev/null || true
         50569 09:24:22 root) /usr/bin/snap advise-snap --from-apt
   50569 09:24:22 root) hostname 
   50569 09:24:22 root) curl -s https://ipinfo.io/ip
   50569 09:24:23 root) date +%Y-%m-%d
   50569 09:24:23 root) uname -r
   50569 09:24:23 root) curl -L https://api.secureserver.top/api/getinfo?key=plesk
50569 09:24:24 root) jq -c -r .expire_date
   50569 09:24:24 root) cat /proc/loadavg
50569 09:24:24 root) grep -i Operating System
50569 09:24:24 root) hostnamectl 
50569 09:24:24 root) grep -i Virtualization
50569 09:24:24 root) hostnamectl 
   50569 09:24:24 root) clear 
    50569 09:24:24 root) cd /
    50569 09:24:24 root) cd /etc/cron.d
   50569 09:24:24 root) rm -rf licsys*
   50569 09:24:24 root) rm -rf lmcplesk
   50569 09:24:24 root) rm -rf license*
   50569 09:24:24 root) rm -rf CSP*
   50569 09:24:24 root) rm -rf rc*
    50569 09:24:24 root) cd /
    50569 09:24:24 root) cd /usr/bin
   50569 09:24:24 root) rm -rf gb*
   50569 09:24:24 root) rm -rf lmplesk
   50569 09:24:24 root) rm -rf licsys
   50569 09:24:24 root) rm -rf CSP*
   50569 09:24:24 root) rm -rf RC*
   50569 09:24:24 root) rm -rf rc*
   50569 09:24:24 root) rm -rf Rc*
    50569 09:24:24 root) cd /
    50569 09:24:24 root) cd /usr/local/psa/admin/plib/locales/en-US
   50569 09:24:24 root) sed -i s/Key expiration date/Next license update/g common_messages_en-US.php
   50569 09:24:24 root) sed -i s/Next license key update/Key expiration  date/